debug: true

## only build for master and tags
#branches:
#  - master
#  - python-buffy
#  - refs/tags/*
#  - add-monitoring-hub


# clone source code with tags
clone:
  tags: true

# main build steps
build:
  # run monitoring hub tests
  run_monitoring_hub_test:
    image: docker.sendence.com:5043/monitoring-hub-builder:latest
    auth_config:
      username: $$DOCKER_USERNAME
      password: $$DOCKER_PASSWORD
    pull: true
    commands:
      - make test-monhub VERBOSE=true
      - make release-monhub VERBOSE=true
    when:
      matrix:
        PONYC_VERSION: amd64

  # main build and test of buffy
  main_build:
    image: sendence/ponyc:sendence-19.2.1-$$PONYC_CONFIG
    pull: true
    commands:
      - make clean arch=$$PONYC_VERSION in_docker=true VERBOSE=true
      - make build-pony arch=$$PONYC_VERSION in_docker=true VERBOSE=true

  # run dagon tests
  run_dagon_test:
    image: sendence/$$PONYC_VERSION-python-runner:0.0.4
    pull: true
    environment:
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
    commands:
      - make test-pony VERBOSE=true -j`nproc`
    privileged: true

  # run dagon tests
  run_dagon_test:
    image: sendence/$$PONYC_VERSION-python-runner:0.0.4
    pull: true
    environment:
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
    commands:
      - chrt -f 80 make dagon-test arch=$$PONYC_VERSION VERBOSE=true
    privileged: true
    when:
      matrix:
        PONYC_VERSION: amd64

#  # build monitoring hub ui docker images
#  build_monitoring_hub_ui_docker_images:
#    image: sendence/docker-runner:0.0.4
#    pull: true
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    commands:
#      - >
#        make clean-docker arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG
#      - >
#        make build-docker-monhub arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG
#    privileged: true
#    when:
#      matrix:
#        PONYC_VERSION: amd64
#
#  # build and push final monitoring hub ui docker images on a push event
#  build_monitoring_hub_ui_docker_images_push:
#    image: sendence/docker-runner:0.0.4
#    pull: true
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /root/.docker/config.json:/root/.docker/config.json
#    commands:
#      - >
#        make push-docker-monhub arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=$$BRANCH-$$COMMIT-$$PONYC_CONFIG
#      - >
#        make arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=$$BRANCH-$$COMMIT-$$PONYC_CONFIG clean-docker
#      - >
#        make arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG clean-docker
#    privileged: true
#    when:
#      event: push
#      matrix:
#        PONYC_VERSION: amd64
#
#  # build and push monitoring hub ui docker images on tag event
#  build_monitoring_hub_ui_docker_images_tag:
#    image: sendence/docker-runner:0.0.4
#    pull: true
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /root/.docker/config.json:/root/.docker/config.json
#    commands:
#      - >
#        make push-docker-monhub arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=$$BRANCH-$$TAG-$$PONYC_CONFIG
#      - >
#        make arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=$$BRANCH-$$TAG-$$PONYC_CONFIG clean-docker
#      - >
#        make arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG clean-docker
#    privileged: true
#    when:
#      event: tag
#      matrix:
#        PONYC_VERSION: amd64
#
#  # build docker images and test dagon
#  build_docker_images_dagon_test:
#    image: sendence/docker-runner:0.0.4
#    pull: true
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    commands:
#      - >
#        make clean-docker arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG
#      - >
#        make build-docker-pony arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG
#      - >
#        make dagon-docker-test arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG
#        docker_no_pull=true
#    privileged: true
#
#  # build and push final docker images on a push event
#  build_docker_images_push:
#    image: sendence/docker-runner:0.0.4
#    pull: true
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /root/.docker/config.json:/root/.docker/config.json
#    commands:
#      - >
#        make push-docker-pony arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=$$BRANCH-$$COMMIT-$$PONYC_CONFIG
#      - >
#        make arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=$$BRANCH-$$COMMIT-$$PONYC_CONFIG clean-docker
#      - >
#        make arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG clean-docker
#    privileged: true
#    when:
#      event: push
#
#  # build and push final docker images on a tag event
#  build_docker_images_tag:
#    image: sendence/docker-runner:0.0.4
#    pull: true
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /root/.docker/config.json:/root/.docker/config.json
#    commands:
#      - >
#        make push-docker-pony arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=$$TAG-$$PONYC_CONFIG
#      - >
#        make arch=$$PONYC_VERSION docker_image_version=$$TAG-$$PONYC_CONFIG
#        VERBOSE=true clean-docker
#      - >
#        make arch=$$PONYC_VERSION VERBOSE=true
#        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG clean-docker
#    privileged: true
#    when:
#      event: tag
#
#  # run dagon spike tests
#  run_dagon_spike_test:
#    image: sendence/$$PONYC_VERSION-python-runner:0.0.4
#    pull: true
#    environment:
#      - LC_ALL=C.UTF-8
#      - LANG=C.UTF-8
#    commands:
#      - chrt -f 80 make dagon-spike-test arch=$$PONYC_VERSION VERBOSE=true
#    privileged: true

# send notifications to slack
notify:
  slack:
    webhook_url: $$SLACK_WEBHOOK
    channel: b-drone-ci
    username: drone-ci
    template: >
      build `#{{ build.number }}` for {{repo.clone_url}} for commit
      `{{build.commit}}` in branch `{{build.branch}}` by `@{{build.author}}`
      with a message ```{{{build.message}}}``` finished with a
      `{{ build.status }}` status in
      {{ duration build.started_at build.finished_at }}
      Build logs at: https://drone.sendence.com/{{repo.full_name}}/{{ build.number }}

# matrix of configurations to test
matrix:
  PONYC_CONFIG:
    - debug
    - release
  PONYC_VERSION:
#    - armhf
    - amd64


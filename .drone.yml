debug: true

# only build for master and tags
branches:
  - master
  - python-buffy
  - refs/tags/*

# clone source code with tags
clone:
  tags: true

# main build steps
build:
  # main build of buffy
  main_build:
    image: sendence/ponyc:sendence-2.2.0-$$PONYC_CONFIG-$$PONYC_VERSION
    pull: true
    commands:
      - make clean arch=$$PONYC_VERSION in_docker=true
      - make arch=$$PONYC_VERSION in_docker=true

  # run tests
  main_test:
    image: sendence/$$PONYC_VERSION-python-runner:0.0.1
    pull: true
    environment:
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
    commands:
      - make test

  # build docker images and test dagon (amd64)
  build_docker_images_dagon_test_amd64:
    image: sendence/docker-runner:0.0.1
    pull: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - >
        make clean-docker arch=$$PONYC_VERSION
        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG
      - >
        make build-docker arch=$$PONYC_VERSION
        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG
      - >
        make dagon-docker-test arch=$$PONYC_VERSION
        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG
        docker_no_pull=true
    privileged: true
    when:
      matrix:
        PONYC_VERSION: amd64

  # run dagon tests (armhf)
  run_dagon_test_armhf:
    image: sendence/$$PONYC_VERSION-python-runner:0.0.1
    pull: true
    environment:
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
    commands:
      - chrt -f 80 make dagon-test arch=$$PONYC_VERSION
    privileged: true
    when:
      matrix:
        PONYC_VERSION: armhf

  # build and push final docker images on a push event
  build_docker_images_push:
    image: sendence/docker-runner:0.0.1
    pull: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/root/.docker/config.json
    commands:
      - >
        make push-docker arch=$$PONYC_VERSION
        docker_image_version=$$BRANCH-$$COMMIT-$$PONYC_CONFIG
      - >
        make arch=$$PONYC_VERSION
        docker_image_version=$$BRANCH-$$COMMIT-$$PONYC_CONFIG clean-docker
      - >
        make arch=$$PONYC_VERSION
        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG clean-docker
    privileged: true
    when:
      event: push

  # build and push final docker images on a tag event
  build_docker_images_tag:
    image: sendence/docker-runner:0.0.1
    pull: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/root/.docker/config.json
    commands:
      - >
        make push-docker arch=$$PONYC_VERSION
        docker_image_version=$$TAG-$$PONYC_CONFIG
      - >
        make arch=$$PONYC_VERSION docker_image_version=$$TAG-$$PONYC_CONFIG
        clean-docker
      - >
        make arch=$$PONYC_VERSION
        docker_image_version=build-$$BUILD_NUMBER-$$PONYC_CONFIG clean-docker
    privileged: true
    when:
      event: tag

# send notifications to slack
notify:
  slack:
    webhook_url: $$SLACK_WEBHOOK
    channel: b-drone-ci
    username: drone-ci
    template: >
      build `#{{ build.number }}` for {{repo.clone_url}} for commit
      `{{build.commit}}` in branch `{{build.branch}}` by `@{{build.author}}`
      with a message ```{{{build.message}}}``` finished with a
      `{{ build.status }}` status in
      {{ duration build.started_at build.finished_at }}

# matrix of configurations to test
matrix:
  PONYC_CONFIG:
    - debug
    - release
  PONYC_VERSION:
    - armhf
    - amd64


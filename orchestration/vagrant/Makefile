ansible_vault_password ?= ~/.ansible_vault_pass.txt## Ansible Vault password file

.PHONY: build configure

default: build

build: ## Run vagrant up step
	vagrant up

destroy: ## Run vagrant destroy step
	vagrant destroy -f

configure: ## Configure nodes using ansible
	@echo "\033[32m==> Running ansible playbook...\033[0m"
	ansible-playbook --vault-password-file $(ansible_vault_password)\
          -i ../ansible/vagrant.py \
          --ssh-common-args="-o StrictHostKeyChecking=no" \
          --extra-vars "cluster_name=$(cluster_name)" \
          ../ansible/playbooks/vagrant.yml
	@echo "\033[32m==> Successfully ran ansible playbook!\033[0m"

help: ## Self-documenting help command
	@echo 'Usage: make [option1=value] [option2=value,...] [target]'
	@echo ''
	@echo 'Options:'
	@grep -E '^[a-zA-Z_-]+ *\?=.*?## .*$$' $(MAKEFILE_LIST) | awk \
          'BEGIN {FS = "?="}; {printf "\033[36m%-30s\033[0m ##%s\n", $$1, $$2}'\
          | awk 'BEGIN {FS = "## "}; \
          {printf "%s %s \033[36m(Default: %s)\033[0m\n", $$1, $$3, $$2}'
	@grep -E 'filter.*arch.*\)$$' $(MAKEFILE_LIST) | awk \
          'BEGIN {FS = "[(),]"}; {printf "\033[36m%-30s\033[0m %s\n", \
          "  Valid values for " $$5 ":", $$7}'
	@grep -E 'filter.*in_docker.*\)$$' $(MAKEFILE_LIST) | awk \
          'BEGIN {FS = "[(),]"}; {printf "\033[36m%-30s\033[0m %s\n", \
          "  Valid values for " $$5 ":", $$7}'
	@echo ''
	@echo 'Targets:'
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk \
          'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", \
          $$1, $$2}'


# create dynamic groups
- hosts: buffy-follower*
  tasks:
  - name: Create a group of all followers for buffy
    group_by: key=buffy-followers

- hosts: buffy-leader*
  vars:
    ethernet_interface: enp0s8
  tasks:
  - name: Create a group of all leaders for buffy
    group_by: key=buffy-leaders
  - name: Set IPs for ptpd unicast
    set_fact: ptpd_destinations="{% if groups['buffy-followers'] is defined %}{% for host in groups['buffy-followers'] %}{{ hostvars[host]['ansible_' + ethernet_interface]['ipv4']['address'] }}{% if not loop.last %},{% endif %}{% endfor %}{% else %}127.0.0.1{% endif %}"

- hosts: buffy-leaders:buffy-followers
  tasks:
  - name: Create a group of all hosts for buffy
    group_by: key=buffy-all

# Apply common configuration to all hosts
- hosts: buffy-all
  roles:
  - { role: common, become: yes }

# Configure and deploy leader servers.
- hosts: buffy-leaders
  vars_files:
    - 'docker_creds.yml'
  vars:
    ethernet_interface: enp0s8
    ptpd_role: master
    ptpd_transport: unicast
    swarm_image: swarm
    consul_image: gliderlabs/consul
    docker_users: [ vagrant, wallaroo ]
    userland_proxy: true
    docker_dockerpy_version: "1.9.0"
  roles:
  - { role: ptpd, become: yes }
  - { role: docker, become: yes }

# Configure and deploy follower servers.
- hosts: buffy-followers
  vars_files:
    - 'docker_creds.yml'
  vars:
    ethernet_interface: enp0s8
    ptpd_role: slave
    ptpd_transport: unicast
    leader_ip: "{{ hostvars[groups['buffy-leaders'][0]]['ansible_' + ethernet_interface]['ipv4']['address'] }}"
    swarm_image: swarm
    consul_image: gliderlabs/consul
    docker_users: [ vagrant, wallaroo ]
    userland_proxy: true
    docker_dockerpy_version: "1.9.0"
  roles:
  - { role: ptpd, become: yes }
  - { role: docker, become: yes }


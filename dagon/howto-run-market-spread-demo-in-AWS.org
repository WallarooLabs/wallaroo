#+LaTeX_CLASS: sendence-com-article-2
#+SETUPFILE: ~/.emacs.dir/org-html-themes/setup/theme-readtheorg.setup
#+TITLE: Market-Spread Demo on AWS
#+AUTHOR: Markus Fix
#+EMAIL: markus@sendence.com
#+DATE: 2016-07-18
#+DESCRIPTION: Notes on how to run the market-spread demo on AWS
#+KEYWORDS: Sendence, distributed, orchestration, buffy, dagon
#+LANGUAGE: english
#+STARTUP: overview
#+TAGS: PROJECT(p) HOME(h) OFFICE(o) PHONE(t) ERRANDS(e)
#+STARTUP: hidestars
#+LaTeX_CLASS_OPTIONS: [10pt,a4paper,captions=tableheading,headsepline,footsepline]
#+LateX_HEADER: \KOMAoptions{titlepage=true, abstract=true}
#+LaTeX_HEADER: \subtitle{Buffy orchestration}
#+LaTeX_HEADER: \usepackage{paralist}
#+LaTeX_HEADER: \usepackage{amssymb}
#+LaTeX_HEADER: \let\itemize\compactitem
#+LaTeX_HEADER: \let\description\compactdesc
#+LaTeX_HEADER: \let\enumerate\compactenum
#+LaTeX_CLASS_OPTIONS: [captions=tableheading]
#+LATEX: 
#+LATEX: \listoffigures

* Introduction
tbd.

* Cluster Setup
#+BEGIN_SRC sh
git clone https://github.com/Sendence/buffy.git ~/buffy
cd ~/buffy
git co market-spread-demo-2016-07-18
cd orchestration/terraform
# Switch to a virtualenv containing Ansible
workon ansible
# boot the cluster
make cluster mem_required=32 cpus_required=8 no_spot=true
#+END_SRC

Result:
#+BEGIN_EXAMPLE
PLAY RECAP *********************************************************************
52.3.254.179               : ok=44   changed=23   unreachable=0    failed=0
54.165.206.245             : ok=43   changed=23   unreachable=0    failed=0
54.172.86.29               : ok=43   changed=23   unreachable=0    failed=0

==> Successfully ran ansible playbook for cluster 'example' in region 'us-east-1'!
#+END_EXAMPLE

We confirm that =52.3.254.179= is our swarm leader by running the following command:
#+BEGIN_SRC sh
ssh -i ~/.ssh/ec2/us-east-1.pem ubuntu@52.3.254.179 docker ps
#+END_SRC

Result:
#+BEGIN_EXAMPLE
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
7826948cebf4        gliderlabs/consul   "/bin/consul agent -s"   7 minutes ago       Up 7 minutes                                 root_consul_1
93b2b82df28b        swarm               "/swarm join --advert"   7 minutes ago       Up 7 minutes        2375/tcp                 root_swarm_1
e50f9c18a14a        swarm               "/swarm manage consul"   7 minutes ago       Up 7 minutes        0.0.0.0:2378->2375/tcp   root_swarmmanage_1
#+END_EXAMPLE

Copy the Dagon config file for the Market-Spread demo to =/tmp= dir of the leader node:
#+BEGIN_SRC sh
cd /buffy
scp -i ~/.ssh/ec2/us-east-1.pem \
 ./dagon/docker-market-spread-aws-swarm.ini \
 ubuntu@52.3.254.179:/tmp
#+END_SRC

Copy the =trades.msg= file to =/tmp= dir of the leader node:
#+BEGIN_SRC sh
cd /buffy
scp -i ~/.ssh/ec2/us-east-1.pem \
 ./demos/marketspread/trades.msg\
 ubuntu@52.3.254.179:/tmp
#+END_SRC

Copy the =nbbo.msg= data file to =/tmp= of the leader node:
#+BEGIN_SRC sh
scp -i ~/.ssh/ec2/us-east-1.pem \
 ./demos/marketspread/nbbo.msg\
 ubuntu@52.3.254.179:/tmp
#+END_SRC


* Boot Containers on Swarm
** Boot Metrics-UI
 Login to the leader node:
 #+BEGIN_SRC sh
ssh -i ~/.ssh/ec2/us-east-1.pem ubuntu@52.3.254.179
 #+END_SRC

 Get the address of the local =ens3= interface:
 #+BEGIN_SRC sh
ifconfig |grep -A 2 ens3
 #+END_SRC

 Result:
 #+BEGIN_EXAMPLE
ens3      Link encap:Ethernet  HWaddr 06:61:0e:2f:98:b1
          inet addr:10.0.28.248  Bcast:10.0.31.255  Mask:255.255.224.0
          inet6 addr: fe80::461:eff:fe2f:98b1/64 Scope:Link
 #+END_EXAMPLE

Create the overlay network on the leader node (port 2375).
 #+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2375 network create -d overlay buffy-swarm
docker --host=tcp://10.0.28.248:2375 network ls|grep buffy-swarm
 #+END_SRC

 Result:
 #+BEGIN_EXAMPLE
0f16f46ed9bb        buffy-swarm                   overlay
 #+END_EXAMPLE

Pull the Docker image for the UI from the Sendence registry:
#+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2378  pull \
 docker.sendence.com:5043/buffy-metrics-ui
#+END_SRC

 In AWS our hostname is always =ip-<our internal IP address>=, which
 in our case translates into =ip-10.0.28.248=. We will use that to
 specify a constraint when booting the UI.

 Start UI:
#+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2378 run -d -u 1000 \
 -p 0.0.0.0:4000:4000 -e "constraint:node==ip-10.0.28.248" \
 -v /tmp:/apps/metrics_reporter_ui/log \
 --name mui -h mui --net=buffy-swarm \
 docker.sendence.com:5043/buffy-metrics-ui
#+END_SRC

 Now we should be able to point our browser at the external IP address
 of our leader node in AWS at port 4000 and see the UI:
 http://52.3.254.179:4000/

** Boot Market-Spread-UI
Pull the image from the Sendence Docker registry:
#+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2378 pull \
 docker.sendence.com:5043/market-spread-reports-ui
#+END_SRC

Start the UI:
#+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2378 run -d -u 1000 \
 -p 0.0.0.0:4001:4001 \
 -e "constraint:node==ip-10-0-28-248" \
 -v /tmp:/apps/market_spread_reports_ui/log \
 --name aui -h aui --net=buffy-swarm \
 docker.sendence.com:5043/market-spread-reports-ui
#+END_SRC

Check the Market-Spread-UI is up: http://52.3.254.179:4001

** Pull Market-Spread Images
Pull all images mentioned in the config file down from the Sendence
registry. Make sure you specify the correct image tag.
 #+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2378 pull \
 docker.sendence.com:5043/sendence/dagon.amd64:sendence-2.3.0-651-g46bb29e
docker --host=tcp://10.0.28.248:2378 pull \
 docker.sendence.com:5043/sendence/giles-sender.amd64:sendence-2.3.0-651-g46bb29e
docker --host=tcp://10.0.28.248:2378 pull \
 docker.sendence.com:5043/sendence/giles-receiver.amd64:sendence-2.3.0-651-g46bb29e
docker --host=tcp://10.0.28.248:2378 pull \
 docker.sendence.com:5043/sendence/market-spread.amd64:sendence-2.3.0-651-g46bb29e
 #+END_SRC

** Boot Metrics Receiver
 Pull the image for the metrics receiver form the Sendence registry:
 #+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2378 pull \
 docker.sendence.com:5043/sendence/market-spread.amd64:sendence-2.3.0-651-g46bb29e
 #+END_SRC

 Start the metrics receiver:
 #+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2378 run -d -u 1000 \
 --name metrics  -h metrics  \
 --privileged \
 -v /usr/bin:/usr/bin:ro  -v /var/run/docker.sock:/var/run/docker.sock  \
 -v /bin:/bin:ro  -v /lib:/lib:ro  -v /lib64:/lib64:ro  \
 -v /usr:/usr:ro  -v /tmp:/tmp  -w /tmp  \
 --net=buffy-swarm \
 docker.sendence.com:5043/sendence/market-spread.amd64:sendence-2.3.0-651-g46bb29e \
 --run-sink -r -l metrics:9000 -m mui:5001 \
 --name market-spread --period 1 -a market-spread-app
 #+END_SRC

** Boot Market-Spread
Boot Market-Spread topology using Dagon:
 #+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2378 run -u 0 \
 --name dagon  -h dagon  --privileged  -i  \
 -e LC_ALL=C.UTF-8 -e LANG=C.UTF-8 \
 -e "constraint:node==ip-10.0.28.248" \
 -v /usr/bin:/usr/bin:ro  \
 -v /var/run/docker.sock:/var/run/docker.sock  \
 -v /bin:/bin:ro  -v /lib:/lib:ro  -v /lib64:/lib64:ro \
 -v /usr:/usr:ro  -v /tmp:/tmp  -w /tmp  \
 --net=buffy-swarm \
 docker.sendence.com:5043/sendence/dagon.amd64:sendence-2.3.0-651-g46bb29e \
 dagon.amd64 \
 --docker=tcp://10.0.28.248:2378  -t 30  \
 --filepath=/tmp/docker-market-spread-aws-swarm.ini  \
 --phone-home=dagon:8080 \
 --tag=sendence-2.3.0-651-g46bb29e
 #+END_SRC



* Boot Containers on Leader
** Boot UI
 Login to the leader node:
 #+BEGIN_SRC sh
ssh -i ~/.ssh/ec2/us-east-1.pem ubuntu@52.3.254.179
 #+END_SRC

 Get the address of the local =ens3= interface:
 #+BEGIN_SRC sh
ifconfig |grep -A 2 ens3
 #+END_SRC

 Result:
 #+BEGIN_EXAMPLE
ens3      Link encap:Ethernet  HWaddr 06:61:0e:2f:98:b1
          inet addr:10.0.28.248  Bcast:10.0.31.255  Mask:255.255.224.0
          inet6 addr: fe80::461:eff:fe2f:98b1/64 Scope:Link
 #+END_EXAMPLE

 Create the network on the leader (port 2375)
 #+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2375 network create buffy-leader
docker --host=tcp://10.0.28.248:2375 network ls|grep buffy-leader
 #+END_SRC

 Result:
 #+BEGIN_EXAMPLE
e6035440013a        buffy-leader        bridge
 #+END_EXAMPLE

Pull the Docker image for the UI from the Sendence registry (note we're connecting to port 2375 which is the Docker daemon on the leader):
#+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2375  pull \
 docker.sendence.com:5043/buffy-metrics-ui
#+END_SRC

 In AWS our hostname is always =ip-<our internal IP address>=, which in our case translates into =ip-10.0.28.248=. We will use that to specify a constraint when booting the UI.
 Start UI:
 #+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2375 run -d -u 1000 \
 -p 0.0.0.0:4000:4000 -e "constraint:node==ip-10-0-28-248" \
 --name mui -h mui --net=buffy-swarm \
 docker.sendence.com:5043/buffy-metrics-ui
 #+END_SRC

 Now we should be able to point our browser at the external IP address of our leader node in AWS at port 4000 and see the UI: http://52.3.254.179:4000/

** Boot Metrics Receiver
 Pull the image for the metrics receiver form the Sendence registry:
 #+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2375 pull \
 docker.sendence.com:5043/sendence/market-spread.amd64:sendence-2.3.0-651-g46bb29e
 #+END_SRC

 Start the metrics receiver:
 #+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2375 run -d -u 1000 \
 --name metrics  -h metrics  \
 --privileged \
 -v /usr/bin:/usr/bin:ro  -v /var/run/docker.sock:/var/run/docker.sock  \
 -v /bin:/bin:ro  -v /lib:/lib:ro  -v /lib64:/lib64:ro  \
 -v /usr:/usr:ro  -v /tmp:/tmp  -w /tmp  \
 --net=buffy-swarm \
 docker.sendence.com:5043/sendence/market-spread.amd64:sendence-2.3.0-651-g46bb29e \
 --run-sink -r -l metrics:9000 -m mui:5001 \
 --name market-spread --period 1 -a market-spread-app
 #+END_SRC
** Boot Market-Spread
 Pull all images mentioned in the config file down from the Sendence registry:
 #+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2375 pull \
 docker.sendence.com:5043/sendence/dagon.amd64:sendence-2.3.0-651-g46bb29e
docker --host=tcp://10.0.28.248:2375 pull \
 docker.sendence.com:5043/sendence/giles-sender.amd64:sendence-2.3.0-651-g46bb29e
docker --host=tcp://10.0.28.248:2375 pull \
 docker.sendence.com:5043/sendence/giles-receiver.amd64:sendence-2.3.0-651-g46bb29e
docker --host=tcp://10.0.28.248:2375 pull \
 docker.sendence.com:5043/sendence/market-spread.amd64:sendence-2.3.0-651-g46bb29e
 #+END_SRC

 Boot Dagon:
 #+BEGIN_SRC sh
docker --host=tcp://10.0.28.248:2375 run -u 0 \
 --name dagon  -h dagon  --privileged  -i  \
 -e LC_ALL=C.UTF-8 -e LANG=C.UTF-8 \
 -e "constraint:node==ip-10-0-28-248" \
 -v /usr/bin:/usr/bin:ro  \
 -v /var/run/docker.sock:/var/run/docker.sock  \
 -v /bin:/bin:ro  -v /lib:/lib:ro  -v /lib64:/lib64:ro \
 -v /usr:/usr:ro  -v /tmp:/tmp  -w /tmp  \
 --net=buffy-swarm \
 docker.sendence.com:5043/sendence/dagon.amd64:sendence-2.3.0-651-g46bb29e \
 dagon.amd64 \
 --docker=tcp://10.0.28.248:2375  -t 30  \
 --filepath=/tmp/docker-market-spread-aws-swarm.ini  \
 --phone-home=dagon:8080 \
 --tag=sendence-2.3.0-651-g46bb29e
 #+END_SRC
* Boot Processes on Leader
** Boot Leader Node
** Boot UI
** Boot Metrics Receiver
** Boot Market Spread

* Leader Only
Boot and provision a single c4.4xlarge EC2 node using spot
pricing.
#+BEGIN_SRC sh
make cluster num_followers=0 leader_instance_type=c4.4xlarge
#+END_SRC

Result:
#+BEGIN_SRC sh
PLAY RECAP *********************************************************************
54.209.159.121             : ok=44   changed=23   unreachable=0  failed=0
#+END_SRC

Copy your configuration files to the node:
#+BEGIN_SRC sh
scp -i ~/.ssh/ec2/us-east-1.pem \
 trades.msg \
 ubuntu@54.209.159.121:/tmp

scp -i ~/.ssh/ec2/us-east-1.pem \
 nbbo.msg \
 ubuntu@54.209.159.121:/tmp
#+END_SRC

Login to the node:
#+BEGIN_SRC sh
ssh -i ~/.ssh/ec2/us-east-1.pem ubuntu@54.209.159.121
#+END_SRC

Configure the Docker network:
#+BEGIN_SRC sh
docker network create buffy-leader
docker network ls|grep buffy-leader
#+END_SRC

Pull the pre-built images from the Sendence registry:
#+BEGIN_SRC sh
docker pull docker.sendence.com:5043/buffy-metrics-ui
docker pull docker.sendence.com:5043/sendence/market-spread.amd64:sendence-2.3.0-651-g46bb29e
docker pull docker.sendence.com:5043/sendence/dagon.amd64:sendence-2.3.0-651-g46bb29e
docker pull docker.sendence.com:5043/sendence/giles-sender.amd64:sendence-2.3.0-651-g46bb29e
docker pull docker.sendence.com:5043/sendence/giles-receiver.amd64:sendence-2.3.0-651-g46bb29e
docker pull docker.sendence.com:5043/sendence/market-spread.amd64:sendence-2.3.0-651-g46bb29e
#+END_SRC

Boot the metrics UI:
#+BEGIN_SRC sh
docker --host=tcp://10.0.18.76:2375 run -d -u 1000 \
 -p 0.0.0.0:4000:4000 -e "constraint:node==ip-10-0-18-76" \
 --name mui -h mui --net=buffy-leader \
 docker.sendence.com:5043/buffy-metrics-ui
#+END_SRC

Boot the market-spread UI:
#+BEGIN_SRC sh
docker --host=tcp://10.0.18.76:2375 run -d -u 1000 \
 --name metrics  -h metrics  \
 --privileged \
 -v /usr/bin:/usr/bin:ro  -v /var/run/docker.sock:/var/run/docker.sock  \
 -v /bin:/bin:ro  -v /lib:/lib:ro  -v /lib64:/lib64:ro  \
 -v /usr:/usr:ro  -v /tmp:/tmp  -w /tmp  \
 --net=buffy-leader \
 docker.sendence.com:5043/sendence/market-spread.amd64:sendence-2.3.0-651-g46bb29e \
 --run-sink -r -l metrics:9000 -m mui:5001 \
 --name market-spread --period 1 -a market-spread-app
#+END_SRC

Boot Dagon which will boot the rest of our processing topology:
#+BEGIN_SRC sh
docker --host=tcp://10.0.18.76:2375 run -u 0 \
 --name dagon  -h dagon  --privileged  -i  \
 -e LC_ALL=C.UTF-8 -e LANG=C.UTF-8 \
 -e "constraint:node==ip-10-0-18-76" \
 -v /usr/bin:/usr/bin:ro  \
 -v /var/run/docker.sock:/var/run/docker.sock  \
 -v /bin:/bin:ro  -v /lib:/lib:ro  -v /lib64:/lib64:ro \
 -v /usr:/usr:ro  -v /tmp:/tmp  -w /tmp  \
 --net=buffy-leader \
 docker.sendence.com:5043/sendence/dagon.amd64:sendence-2.3.0-651-g46bb29e \
 dagon.amd64 \
 --docker=tcp://10.0.18.76:2375  -t 30  \
 --filepath=/tmp/docker-market-spread-aws-leader.ini  \
 --phone-home=dagon:8080 \
 --tag=sendence-2.3.0-651-g46bb29e
#+END_SRC

